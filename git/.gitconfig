[alias]
  alias = "!git config --get-regexp '^alias\\.' | fzf"  # search aliases

  ad = add
  br = "!git for-each-ref --format='%(if)%(HEAD)%(then)\\033[38;2;136;192;208m* %(refname:short)\\033[0m%(else)  \\033[38;2;216;222;233m%(refname:short)\\033[0m%(end)' refs/heads/ | while IFS= read -r line; do printf '%b\\n' \"$line\"; done"
  brdd = branch --delete --force
  brd = branch --delete
  brdm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"    # Delete merged
  brm = branch -m
  ch = checkout
  chb = checkout -b
  cl = clone
  cm = commit --verbose
  cma = commit --amend
  cman = commit --amend --no-edit
  cmm = commit --verbose --message
  cp = cherry-pick
  cpa = cherry-pick --abort
  cpc = cherry-pick --continue
  fe = fetch
  fep = fetch --prune
  lg = "!git log \
    --color=always \
    --pretty=format:'%C(#88c0d0)%h%Creset %C(#81a1c1)%cr%Creset %C(#ebcb8b)%d%Creset %s %C(#88c0d0)%an%Creset' \
    --abbrev-commit \
    | sed 's/ ago//' \
    | sed -E 's/([0-9]+) seconds/\\1s/' \
    | sed -E 's/([0-9]+) minutes/\\1m/' \
    | sed -E 's/([0-9]+) hours/\\1h/' \
    | sed -E 's/([0-9]+) days/\\1D/' \
    | sed -E 's/([0-9]+) weeks/\\1W/' \
    | sed -E 's/([0-9]+) months/\\1M/' \
    | less --RAW-CONTROL-CHARS --chop-long-lines"
  pl = pull
  plr = pull --rebase
  pls = "!git stash && git pull --rebase && git stash pop"
  ps = push
  psf = push --force-with-lease
  psu = push -u origin HEAD
  rb = rebase
  rba = rebase --abort
  rbc = rebase --continue
  rbi = rebase --interactive
  rbk = rebase --skip
  rbs = "!f() { git stash && git rebase \"$1\" && git stash pop; }; f"
  ro = restore
  rs = reset
  rt = remote -vv                     # List remote branches
  rtdm = remote prune                 # Delete remote merged branches
  rta = remote add                    # Add new remote branch
  st = stash
  stc = stash clear
  stl = stash list
  stp = stash pop
  stu = stash -u                      # include untracked files
  sl = shortlog -c -s                 # Show number of commits per author
  so = show
  sofc = show --pretty="" --name-only # List files on commit
  ss = status 
  sw = switch
  swc = switch -c
  
[core]
  editor = nvim

[diff]
	tool = vimdiff

[difftool]
  prompt = false

[fetch]
  prune = true                        # remove local branches that have been deleted upstream

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[init]
	defaultBranch = main

[merge]
  tool = vimdiff
